name: Main CI-pipeline

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Checkstyle
        run: dotnet format --verify-no-changes

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Test
        run: |
          dotnet build SpaceBattle.Lib/SpaceBattle.Lib.csproj --configuration Release
          dotnet build SpaceBattle.Tests/SpaceBattle.Tests.csproj --configuration Release
          dotnet test --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate Coverage Report
        run: |
          reportgenerator "-reports:coverage/*/coverage.cobertura.xml" "-targetdir:coveragereport" "-reporttypes:TextSummary;Cobertura"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Find Uncovered Lines
        run: |
          echo "Uncovered Lines Details" >> $GITHUB_STEP_SUMMARY
          find SpaceBattle.Lib -name "*.cs" -not -path "*/obj/*" -exec basename {} \; >> $GITHUB_STEP_SUMMARY

      - name: Summary
        run: |
          echo "Code Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "Coverage Summary" >> $GITHUB_STEP_SUMMARY
          cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
