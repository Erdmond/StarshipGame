name: Main CI-pipeline

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Checkstyle
        run: dotnet format --verify-no-changes
 
      - name: Restore dependencies
        run: dotnet restore

      - name: Install Moq
        run: dotnet add StarshipGame.Tests/StarshipGame.Tests.csproj package Moq

      - name: Build
        run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true

      - name: Test
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Coverage Report
        run: reportgenerator -reports:StarshipGame.Tests/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:Html;HtmlSummary

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coveragereport
      
      - name: Display Coverage Percentage
        run: |
          Coverage=$(grep -oP '(?<=<linescovered>)[0-9]+' StarshipGame.Tests/coverage.cobertura.xml)
          TotalLines=$(grep -oP '(?<=<lines>)[0-9]+' StarshipGame.Tests/coverage.cobertura.xml)
          Percent=$(awk "BEGIN {printf \"%.2f\", ($Coverage/$TotalLines)*100}")
          echo "Coverage: $Percent%"
